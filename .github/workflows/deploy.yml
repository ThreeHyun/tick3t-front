# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
# test1
name: Tick3t CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code.
      uses: actions/checkout@v3
      
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
          
    - name: Install Dependencies
      run: npm install

    - name: Generate Environment Variables File for Production
      run: |
        echo "VITE_API_URL=$VITE_API_URL" >> .env.local
      env:
        REACT_APP_DOMAIN: ${{ secrets.VITE_API_URL }}
        REACT_APP_DEBUG: ${{ secrets.VITE_API_URL }}
      
    - name: Build
      run: npm run build
      
    - name: SHOW AWS CLI VERSION
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws --version
    - name: Sync Bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_EC2_METADATA_DISABLED: true
      run: |
        aws s3 sync \
          --region ap-northeast-2 \
          dist s3://tick-3t.com \
